[
  [
    "./output/Utils.ts",
    3140,
    [
      ["{}", ["./output/Evaporate.ts", 1744]],
      [
        "{ abortCompletionThrottlingMs: number, allowS3ExistenceOptimization: boolean, awsRegion: string, awsSignatureVersion: string, aws_key: null, bucket: null, cloudfront: boolean, computeContentMd5: boolean, cryptoHexEncodedHash256: null, cryptoMd5Method: null, customAuthMethod: undefined, encodeFilename: boolean, evaporateChanged: () => any, localTimeOffset: undefined, logging: boolean, maxConcurrentParts: number, maxFileSize: null, maxRetryBackoffSecs: number, mockLocalStorage: boolean, onlyRetryForSameFileName: boolean, partSize: number, progressIntervalMS: number, readableStreamPartMethod: null, readableStreams: boolean, retryBackoffPower: number, s3Acceleration: boolean, s3FileCacheHoursAgo: null, sendCanonicalRequestToSignerUrl: boolean, signHeaders: {}, signParams: {}, signResponseHandler: null, timeUrl: null, xhrWithCredentials: boolean }",
        null
      ],
      ["undefined", null],
      [
        "{ abortCompletionThrottlingMs: number, allowS3ExistenceOptimization: boolean, awsRegion: string, awsSignatureVersion: string, aws_key: string, aws_url: string, bucket: string, cloudfront: boolean, computeContentMd5: boolean, cryptoHexEncodedHash256: (data: any) => any, cryptoMd5Method: (data: any) => any, customAuthMethod: (functionresolve: any,reject: any) => any, encodeFilename: boolean, evaporateChanged: () => any, localTimeOffset: number, logging: boolean, maxConcurrentParts: number, maxFileSize: null, maxRetryBackoffSecs: number, mockLocalStorage: boolean, onlyRetryForSameFileName: boolean, partSize: number, progressIntervalMS: number, readableStreamPartMethod: null, readableStreams: boolean, retryBackoffPower: number, s3Acceleration: boolean, s3FileCacheHoursAgo: null, sendCanonicalRequestToSignerUrl: boolean, signHeaders: {}, signParams: {}, signResponseHandler: null, timeUrl: null, xhrWithCredentials: boolean }",
        ["./output/Evaporate.ts", 5971]
      ],
      [
        "{ beforeSigner: undefined, cancelled: () => any, complete: () => any, error: () => any, info: () => any, nameChanged: () => any, notSignedHeadersAtInitiate: {}, paused: () => any, pausing: () => any, progress: () => any, resumed: () => any, started: () => any, uploadInitiated: () => any, warn: () => any, xAmzHeadersAtComplete: {}, xAmzHeadersAtInitiate: {}, xAmzHeadersAtUpload: {}, xAmzHeadersCommon: null }",
        null
      ],
      ["{}", ["./output/FileUpload.ts", 1779]],
      ["FileUpload", ["./output/FileUpload.ts", 1921]],
      ["{}", ["./output/SignedS3AWSRequest.ts", 839]],
      ["null", null],
      ["{}", ["./output/SignedS3AWSRequest.ts", 3275]],
      ["{}", ["./output/SignedS3AWSRequest.ts", 3334]],
      ["{ \"x-amz-date\": string }", ["./output/SignedS3AWSRequest.ts", 5442]],
      ["{}", ["./output/SignedS3AWSRequest.ts", 5442]]
    ],
    {}
  ],
  [
    "./output/Utils.ts",
    3146,
    [
      [
        "{ awsRegion: string, awsSignatureVersion: string, aws_key: string, aws_url: string, bucket: string, computeContentMd5: boolean, cryptoHexEncodedHash256: (data: any) => any, cryptoMd5Method: (data: any) => any, customAuthMethod: (functionresolve: any,reject: any) => any }",
        ["./output/Evaporate.ts", 1748]
      ],
      [
        "{ awsRegion: string, awsSignatureVersion: string, aws_key: string, aws_url: string, bucket: string, computeContentMd5: boolean, cryptoHexEncodedHash256: (data: any) => any, cryptoMd5Method: (data: any) => any, customAuthMethod: (functionresolve: any,reject: any) => any, localTimeOffset: number }",
        ["./output/Evaporate.ts", 1797]
      ],
      ["{}", ["./output/Evaporate.ts", 5871]],
      ["{}", ["./output/Evaporate.ts", 5984]],
      ["{ file: File, name: string, progress: (progress: any) => any }", null],
      [
        "{ abortCompletionThrottlingMs: number, allowS3ExistenceOptimization: boolean, awsRegion: string, awsSignatureVersion: string, aws_key: string, aws_url: string, bucket: string, cloudfront: boolean, computeContentMd5: boolean, cryptoHexEncodedHash256: (data: any) => any, cryptoMd5Method: (data: any) => any, customAuthMethod: (functionresolve: any,reject: any) => any, encodeFilename: boolean, evaporateChanged: () => any, localTimeOffset: number, logging: boolean, maxConcurrentParts: number, maxFileSize: null, maxRetryBackoffSecs: number, mockLocalStorage: boolean, onlyRetryForSameFileName: boolean, partSize: number, progressIntervalMS: number, readableStreamPartMethod: null, readableStreams: boolean, retryBackoffPower: number, s3Acceleration: boolean, s3FileCacheHoursAgo: null, sendCanonicalRequestToSignerUrl: boolean, signHeaders: {}, signParams: {}, signResponseHandler: null, timeUrl: null, xhrWithCredentials: boolean }",
        ["./output/FileUpload.ts", 1783]
      ],
      [
        "{ beforeSigner: undefined, cancelled: () => any, complete: () => any, eTag: string, error: () => any, file: File, info: () => any, loadedBytes: number, name: string, nameChanged: () => any, notSignedHeadersAtInitiate: {}, paused: () => any, pausing: () => any, priority: number, progress: (progress: any) => any, resumed: () => any, sizeBytes: number, started: () => any, status: number, uploadInitiated: () => any, warn: () => any, xAmzHeadersAtComplete: {}, xAmzHeadersAtInitiate: {}, xAmzHeadersAtUpload: {}, xAmzHeadersCommon: null }",
        ["./output/FileUpload.ts", 1927]
      ],
      ["undefined", null],
      ["{ \"x-amz-date\": string }", ["./output/SignedS3AWSRequest.ts", 5470]],
      ["{ \"x-amz-date\": string }", ["./output/SignedS3AWSRequest.ts", 3347]],
      [
        "{ method: string, not_signed_headers: {}, path: string, response_match: string, step: string, x_amz_headers: {} }",
        ["./output/SignedS3AWSRequest.ts", 843]
      ],
      ["{}", ["./output/SignedS3AWSRequest.ts", 3288]],
      [
        "{ method: string, path: string, step: string, success404: boolean, x_amz_headers: null }",
        ["./output/SignedS3AWSRequest.ts", 843]
      ]
    ],
    {}
  ],
  [
    "./output/Utils.ts",
    3153,
    [
      ["undefined", null],
      [
        "{ eTag: string, loadedBytes: number, priority: number, sizeBytes: number, status: number }",
        null
      ]
    ],
    {}
  ],
  [
    "./output/Utils.ts",
    3178,
    [
      [
        "{ awsRegion: string, awsSignatureVersion: string, aws_key: string, aws_url: string, bucket: string, computeContentMd5: boolean, cryptoHexEncodedHash256: (data: any) => any, cryptoMd5Method: (data: any) => any, customAuthMethod: (functionresolve: any,reject: any) => any }",
        ["./output/Utils.ts", 3439]
      ],
      ["{}", ["./output/Utils.ts", 3457]],
      [
        "{ awsRegion: string, awsSignatureVersion: string, aws_key: string, aws_url: string, bucket: string, computeContentMd5: boolean, cryptoHexEncodedHash256: (data: any) => any, cryptoMd5Method: (data: any) => any, customAuthMethod: (functionresolve: any,reject: any) => any, localTimeOffset: number }",
        ["./output/Utils.ts", 3439]
      ],
      [
        "{ abortCompletionThrottlingMs: number, allowS3ExistenceOptimization: boolean, awsRegion: string, awsSignatureVersion: string, aws_key: null, bucket: null, cloudfront: boolean, computeContentMd5: boolean, cryptoHexEncodedHash256: null, cryptoMd5Method: null, customAuthMethod: undefined, encodeFilename: boolean, evaporateChanged: () => any, localTimeOffset: undefined, logging: boolean, maxConcurrentParts: number, maxFileSize: null, maxRetryBackoffSecs: number, mockLocalStorage: boolean, onlyRetryForSameFileName: boolean, partSize: number, progressIntervalMS: number, readableStreamPartMethod: null, readableStreams: boolean, retryBackoffPower: number, s3Acceleration: boolean, s3FileCacheHoursAgo: null, sendCanonicalRequestToSignerUrl: boolean, signHeaders: {}, signParams: {}, signResponseHandler: null, timeUrl: null, xhrWithCredentials: boolean }",
        ["./output/Utils.ts", 3457]
      ],
      ["{}", ["./output/Utils.ts", 3439]],
      [
        "{ abortCompletionThrottlingMs: number, allowS3ExistenceOptimization: boolean, awsRegion: string, awsSignatureVersion: string, aws_key: string, aws_url: string, bucket: string, cloudfront: boolean, computeContentMd5: boolean, cryptoHexEncodedHash256: (data: any) => any, cryptoMd5Method: (data: any) => any, customAuthMethod: (functionresolve: any,reject: any) => any, encodeFilename: boolean, evaporateChanged: () => any, localTimeOffset: number, logging: boolean, maxConcurrentParts: number, maxFileSize: null, maxRetryBackoffSecs: number, mockLocalStorage: boolean, onlyRetryForSameFileName: boolean, partSize: number, progressIntervalMS: number, readableStreamPartMethod: null, readableStreams: boolean, retryBackoffPower: number, s3Acceleration: boolean, s3FileCacheHoursAgo: null, sendCanonicalRequestToSignerUrl: boolean, signHeaders: {}, signParams: {}, signResponseHandler: null, timeUrl: null, xhrWithCredentials: boolean }",
        ["./output/Utils.ts", 3457]
      ],
      [
        "{ file: File, name: string, progress: (progress: any) => any }",
        ["./output/Utils.ts", 3439]
      ],
      [
        "{ beforeSigner: undefined, cancelled: () => any, complete: () => any, error: () => any, info: () => any, nameChanged: () => any, notSignedHeadersAtInitiate: {}, paused: () => any, pausing: () => any, progress: () => any, resumed: () => any, started: () => any, uploadInitiated: () => any, warn: () => any, xAmzHeadersAtComplete: {}, xAmzHeadersAtInitiate: {}, xAmzHeadersAtUpload: {}, xAmzHeadersCommon: null }",
        ["./output/Utils.ts", 3457]
      ],
      [
        "{ abortCompletionThrottlingMs: number, allowS3ExistenceOptimization: boolean, awsRegion: string, awsSignatureVersion: string, aws_key: string, aws_url: string, bucket: string, cloudfront: boolean, computeContentMd5: boolean, cryptoHexEncodedHash256: (data: any) => any, cryptoMd5Method: (data: any) => any, customAuthMethod: (functionresolve: any,reject: any) => any, encodeFilename: boolean, evaporateChanged: () => any, localTimeOffset: number, logging: boolean, maxConcurrentParts: number, maxFileSize: null, maxRetryBackoffSecs: number, mockLocalStorage: boolean, onlyRetryForSameFileName: boolean, partSize: number, progressIntervalMS: number, readableStreamPartMethod: null, readableStreams: boolean, retryBackoffPower: number, s3Acceleration: boolean, s3FileCacheHoursAgo: null, sendCanonicalRequestToSignerUrl: boolean, signHeaders: {}, signParams: {}, signResponseHandler: null, timeUrl: null, xhrWithCredentials: boolean }",
        ["./output/Utils.ts", 3439]
      ],
      [
        "{ beforeSigner: undefined, cancelled: () => any, complete: () => any, eTag: string, error: () => any, file: File, info: () => any, loadedBytes: number, name: string, nameChanged: () => any, notSignedHeadersAtInitiate: {}, paused: () => any, pausing: () => any, priority: number, progress: (progress: any) => any, resumed: () => any, sizeBytes: number, started: () => any, status: number, uploadInitiated: () => any, warn: () => any, xAmzHeadersAtComplete: {}, xAmzHeadersAtInitiate: {}, xAmzHeadersAtUpload: {}, xAmzHeadersCommon: null }",
        ["./output/Utils.ts", 3439]
      ],
      ["FileUpload", ["./output/Utils.ts", 3457]],
      ["{ \"x-amz-date\": string }", ["./output/Utils.ts", 3439]],
      ["{ \"x-amz-date\": string }", ["./output/Utils.ts", 3457]],
      [
        "{ method: string, not_signed_headers: {}, path: string, response_match: string, step: string, x_amz_headers: {} }",
        ["./output/Utils.ts", 3439]
      ],
      [
        "{ method: string, path: string, step: string, success404: boolean, x_amz_headers: null }",
        ["./output/Utils.ts", 3439]
      ]
    ],
    {}
  ],
  [
    "./output/Utils.ts",
    3186,
    [
      ["{}", ["./output/Utils.ts", 3445]],
      [
        "{ awsRegion: string, awsSignatureVersion: string, aws_key: string, aws_url: string, bucket: string, computeContentMd5: boolean, cryptoHexEncodedHash256: (data: any) => any, cryptoMd5Method: (data: any) => any, customAuthMethod: (functionresolve: any,reject: any) => any }",
        ["./output/Utils.ts", 3463]
      ],
      [
        "{ awsRegion: string, awsSignatureVersion: string, aws_key: string, aws_url: string, bucket: string, computeContentMd5: boolean, cryptoHexEncodedHash256: (data: any) => any, cryptoMd5Method: (data: any) => any, customAuthMethod: (functionresolve: any,reject: any) => any, localTimeOffset: number }",
        ["./output/Utils.ts", 3463]
      ],
      ["{}", ["./output/Utils.ts", 3463]],
      [
        "{ eTag: string, loadedBytes: number, priority: number, sizeBytes: number, status: number }",
        ["./output/Utils.ts", 3445]
      ],
      [
        "{ eTag: string, file: File, loadedBytes: number, name: string, priority: number, progress: (progress: any) => any, sizeBytes: number, status: number }",
        ["./output/Utils.ts", 3463]
      ],
      [
        "{ abortCompletionThrottlingMs: number, allowS3ExistenceOptimization: boolean, awsRegion: string, awsSignatureVersion: string, aws_key: string, aws_url: string, bucket: string, cloudfront: boolean, computeContentMd5: boolean, cryptoHexEncodedHash256: (data: any) => any, cryptoMd5Method: (data: any) => any, customAuthMethod: (functionresolve: any,reject: any) => any, encodeFilename: boolean, evaporateChanged: () => any, localTimeOffset: number, logging: boolean, maxConcurrentParts: number, maxFileSize: null, maxRetryBackoffSecs: number, mockLocalStorage: boolean, onlyRetryForSameFileName: boolean, partSize: number, progressIntervalMS: number, readableStreamPartMethod: null, readableStreams: boolean, retryBackoffPower: number, s3Acceleration: boolean, s3FileCacheHoursAgo: null, sendCanonicalRequestToSignerUrl: boolean, signHeaders: {}, signParams: {}, signResponseHandler: null, timeUrl: null, xhrWithCredentials: boolean }",
        ["./output/Utils.ts", 3463]
      ],
      [
        "{ beforeSigner: undefined, cancelled: () => any, complete: () => any, eTag: string, error: () => any, file: File, info: () => any, loadedBytes: number, name: string, nameChanged: () => any, notSignedHeadersAtInitiate: {}, paused: () => any, pausing: () => any, priority: number, progress: (progress: any) => any, resumed: () => any, sizeBytes: number, started: () => any, status: number, uploadInitiated: () => any, warn: () => any, xAmzHeadersAtComplete: {}, xAmzHeadersAtInitiate: {}, xAmzHeadersAtUpload: {}, xAmzHeadersCommon: null }",
        ["./output/Utils.ts", 3463]
      ],
      ["{ \"x-amz-date\": string }", ["./output/Utils.ts", 3463]],
      [
        "{ method: string, not_signed_headers: {}, path: string, response_match: string, step: string, x_amz_headers: {} }",
        ["./output/Utils.ts", 3463]
      ],
      [
        "{ method: string, path: string, step: string, success404: boolean, x_amz_headers: null }",
        ["./output/Utils.ts", 3463]
      ]
    ],
    {}
  ],
  ["./output/Evaporate.ts", 731, [["() => any", null]], { "arrow": true }],
  ["./output/Evaporate.ts", 739, [["() => any", null]], { "arrow": true }],
  [
    "./output/Evaporate.ts",
    1820,
    [["number", null]],
    { "arrow": true, "parens": [1814, 1820] }
  ],
  ["./output/Evaporate.ts", 1902, [["() => any", null]], { "arrow": true }],
  ["./output/Evaporate.ts", 1910, [["() => any", null]], { "arrow": true }],
  [
    "./output/Utils.ts",
    5431,
    [["string", null]],
    { "arrow": true, "parens": [5428, 5431] }
  ],
  [
    "./output/Evaporate.ts",
    5738,
    [["{ file: File, name: string, progress: (progress: any) => any }", null]],
    {}
  ],
  ["./output/Evaporate.ts", 5747, [["undefined", null]], {}],
  ["./output/Evaporate.ts", 5824, [["() => any", null]], { "arrow": true }],
  ["./output/Evaporate.ts", 5832, [["() => any", null]], { "arrow": true }],
  [
    "./output/Evaporate.ts",
    5909,
    [["string", null]],
    { "arrow": true, "parens": [5908, 5909] }
  ],
  ["./output/Utils.ts", 1333, [["string", null]], {}],
  [
    "./output/Utils.ts",
    1425,
    [["string", null]],
    { "arrow": true, "parens": [1424, 1425] }
  ],
  ["./output/Utils.ts", 2958, [["() => any", null]], { "arrow": true }],
  ["./output/Utils.ts", 2966, [["() => any", null]], { "arrow": true }],
  [
    "./output/Evaporate.ts",
    5550,
    [["FileUpload", ["./output/Evaporate.ts", 7606]]],
    {}
  ],
  ["./output/Evaporate.ts", 4597, [["string", null]], {}],
  ["./output/Evaporate.ts", 13221, [["number", null]], {}],
  [
    "./output/Utils.ts",
    3517,
    [
      ["boolean", null],
      ["undefined", null]
    ],
    {}
  ],
  ["./output/HistoryCache.ts", 776, [["string", null]], {}],
  ["./output/HistoryCache.ts", 865, [["string", null]], {}],
  ["./output/HistoryCache.ts", 872, [["string", null]], {}],
  [
    "./output/Utils.ts",
    4074,
    [
      ["FileUpload", ["./output/FileUpload.ts", 10804]],
      ["FileUpload", ["./output/FileUpload.ts", 10672]],
      ["FileUpload", ["./output/FileUpload.ts", 9455]]
    ],
    {}
  ],
  ["./output/Utils.ts", 2365, [["number", null]], {}],
  [
    "./output/FileUpload.ts",
    11042,
    [
      [
        "{ awsKey: string, bucket: string, createdAt: string, fileSize: number, fileType: string, firstMd5Digest: string, lastModifiedDate: string, partSize: number, signParams: {}, uploadId: string }",
        ["./output/FileUpload.ts", 10840]
      ]
    ],
    {}
  ],
  [
    "./output/Utils.ts",
    871,
    [
      [
        "{ abortCompletionThrottlingMs: number, allowS3ExistenceOptimization: boolean, awsRegion: string, awsSignatureVersion: string, aws_key: string, aws_url: string, bucket: string, cloudfront: boolean, computeContentMd5: boolean, cryptoHexEncodedHash256: (data: any) => any, cryptoMd5Method: (data: any) => any, customAuthMethod: (functionresolve: any,reject: any) => any, encodeFilename: boolean, evaporateChanged: () => any, localTimeOffset: number, logging: boolean, maxConcurrentParts: number, maxFileSize: null, maxRetryBackoffSecs: number, mockLocalStorage: boolean, onlyRetryForSameFileName: boolean, partSize: number, progressIntervalMS: number, readableStreamPartMethod: null, readableStreams: boolean, retryBackoffPower: number, s3Acceleration: boolean, s3FileCacheHoursAgo: null, sendCanonicalRequestToSignerUrl: boolean, signHeaders: {}, signParams: {}, signResponseHandler: null, timeUrl: null, xhrWithCredentials: boolean }",
        ["./output/SignedS3AWSRequest.ts", 763]
      ]
    ],
    {}
  ],
  ["./output/Utils.ts", 1707, [["string", null]], {}],
  [
    "./output/SignedS3AWSRequest.ts",
    1206,
    [
      ["{}", ["./output/SignedS3AWSRequest.ts", 962]],
      [
        "{ method: string, path: string, query_string: string, step: string, success404: boolean, x_amz_headers: null }",
        null
      ],
      [
        "{ method: string, not_signed_headers: {}, path: string, response_match: string, step: string, x_amz_headers: {} }",
        ["./output/SignedS3AWSRequest.ts", 962]
      ],
      [
        "{ contentSha256: string, method: string, onProgress: () => any, path: string, step: string, x_amz_headers: {} }",
        ["./output/PutPart.ts", 1252]
      ],
      [
        "{ method: string, path: string, step: string, success404: boolean, x_amz_headers: null }",
        ["./output/SignedS3AWSRequest.ts", 962]
      ]
    ],
    {}
  ],
  ["./output/ResumeInterruptedUpload.ts", 461, [["number", null]], {}],
  ["./output/AwsSignature.ts", 446, [["number", null]], {}],
  ["./output/AwsSignature.ts", 359, [["number", null]], {}],
  [
    "./output/AwsSignatureV4.ts",
    312,
    [
      ["null", null],
      ["ArrayBuffer", ["./output/PutPart.ts", 1540]],
      ["ArrayBuffer", ["./output/PutPart.ts", 7820]]
    ],
    { "arrow": true, "parens": [308, 312] }
  ],
  [
    "./output/Utils.ts",
    655,
    [
      ["ResumeInterruptedUpload", ["./output/SignedS3AWSRequest.ts", 5605]],
      ["InitiateMultipartUpload", ["./output/SignedS3AWSRequest.ts", 5605]],
      ["PutPart", ["./output/SignedS3AWSRequest.ts", 5605]],
      ["DeleteMultipartUpload", ["./output/SignedS3AWSRequest.ts", 5605]]
    ],
    {}
  ],
  [
    "./output/AuthorizationMethod.ts",
    206,
    [
      ["{}", ["./output/AuthorizationCustom.ts", 227]],
      ["{}", ["./output/AuthorizationCustom.ts", 305]]
    ],
    {}
  ],
  [
    "./output/AwsSignatureV4.ts",
    1954,
    [["{ name: string, value: string }", null]],
    { "arrow": true }
  ],
  [
    "./output/AwsSignatureV4.ts",
    1957,
    [["{ name: string, value: string }", null]],
    { "arrow": true }
  ],
  ["./output/AwsSignatureV4.ts", 2699, [["string", null]], {}],
  ["./output/AwsSignatureV4.ts", 2706, [["string", null]], {}],
  ["./output/AwsSignatureV4.ts", 3312, [["string", null]], { "arrow": true }],
  ["./output/AwsSignatureV4.ts", 3315, [["string", null]], { "arrow": true }],
  [
    "./output/SignedS3AWSRequest.ts",
    5850,
    [["string", null]],
    { "arrow": true, "parens": [5845, 5850] }
  ],
  ["./output/SignedS3AWSRequest.ts", 5665, [["string", null]], {}],
  [
    "./output/SignedS3AWSRequest.ts",
    2987,
    [["() => any", null]],
    { "arrow": true }
  ],
  [
    "./output/SignedS3AWSRequest.ts",
    2995,
    [["() => any", null]],
    { "arrow": true }
  ],
  [
    "./output/AwsSignatureV4.ts",
    4763,
    [["XMLHttpRequest", ["./output/SignedS3AWSRequest.ts", 4363]]],
    {}
  ],
  [
    "./output/SignedS3AWSRequest.ts",
    2278,
    [["XMLHttpRequest", ["./output/SignedS3AWSRequest.ts", 3485]]],
    {}
  ],
  [
    "./output/Utils.ts",
    2520,
    [["XMLHttpRequest", ["./output/SignedS3AWSRequest.ts", 3940]]],
    {}
  ],
  ["./output/Utils.ts", 2739, [["string", null]], {}],
  ["./output/Utils.ts", 2748, [["string", null]], {}],
  ["./output/SignedS3AWSRequest.ts", 1575, [["string", null]], {}],
  ["./output/SignedS3AWSRequestWithRetryLimit.ts", 393, [["string", null]], {}],
  ["./output/FileUpload.ts", 9318, [["number", null]], {}],
  ["./output/FileUpload.ts", 5094, [["string", null]], {}],
  ["./output/FileUpload.ts", 16040, [["string", null]], {}],
  ["./output/Utils.ts", 4574, [["string", null]], {}],
  ["./output/Utils.ts", 4393, [["string", null]], {}],
  [
    "./output/Utils.ts",
    4401,
    [
      [
        "{ awsKey: string, bucket: string, createdAt: string, fileSize: number, fileType: string, lastModifiedDate: string, partSize: number, signParams: {}, uploadId: string }",
        ["./output/FileUpload.ts", 9847]
      ]
    ],
    {}
  ],
  ["./output/FileUpload.ts", 7533, [["undefined", null]], {}],
  ["./output/FileUpload.ts", 9040, [["number", null]], {}],
  ["./output/FileUpload.ts", 9048, [["number", null]], {}],
  ["./output/FileUpload.ts", 9054, [["number", null]], {}],
  [
    "./output/FileUpload.ts",
    7954,
    [
      [
        "{ awsRequest: PutPart, isEmpty: boolean, loadedBytes: number, loadedBytesPrevious: null, md5_digest: null, partNumber: number, status: number }",
        ["./output/FileUpload.ts", 8798]
      ]
    ],
    {}
  ],
  [
    "./output/FileUpload.ts",
    8271,
    [
      [
        "{ awsRequest: PutPart, isEmpty: boolean, loadedBytes: number, loadedBytesPrevious: null, md5_digest: null, partNumber: number, status: number }",
        ["./output/FileUpload.ts", 8822]
      ]
    ],
    {}
  ],
  [
    "./output/FileUpload.ts",
    15891,
    [
      [
        "{ awsRequest: PutPart, isEmpty: boolean, loadedBytes: number, loadedBytesPrevious: null, md5_digest: null, partNumber: number, status: number }",
        ["./output/FileUpload.ts", 14998]
      ]
    ],
    {}
  ],
  ["./output/FileUpload.ts", 3798, [["number", null]], {}],
  ["./output/PutPart.ts", 1370, [["() => any", null]], { "arrow": true }],
  ["./output/PutPart.ts", 1378, [["() => any", null]], { "arrow": true }],
  [
    "./output/PutPart.ts",
    7715,
    [["() => any", null]],
    { "arrow": true, "parens": [7708, 7715] }
  ],
  [
    "./output/PutPart.ts",
    1480,
    [["ArrayBuffer", ["./output/PutPart.ts", 7820]]],
    { "arrow": true, "parens": [1476, 1480] }
  ],
  [
    "./output/PutPart.ts",
    2021,
    [["string", null]],
    { "arrow": true, "parens": [2011, 2021] }
  ],
  ["./output/PutPart.ts", 3296, [["ProgressEvent", null]], {}],
  ["./output/FileUpload.ts", 2067, [["number", null]], {}],
  ["./output/Utils.ts", 4865, [["number", null]], {}],
  ["./output/FileUpload.ts", 11634, [["null", null]], {}],
  [
    "./output/FileUpload.ts",
    11646,
    [["PutPart", ["./output/PutPart.ts", 3212]]],
    {}
  ],
  [
    "./output/FileUpload.ts",
    7717,
    [
      [
        "{ awsRequest: PutPart, eTag: null, isEmpty: boolean, loadedBytes: number, loadedBytesPrevious: null, md5_digest: string, partNumber: number, status: number }",
        ["./output/FileUpload.ts", 8004]
      ],
      [
        "{ awsRequest: PutPart, isEmpty: boolean, loadedBytes: number, loadedBytesPrevious: null, md5_digest: string, partNumber: number, status: number }",
        ["./output/FileUpload.ts", 8321]
      ]
    ],
    {}
  ],
  [
    "./output/Utils.ts",
    4738,
    [
      ["number[]", ["./output/FileUpload.ts", 7741]],
      ["number[]", ["./output/FileUpload.ts", 7800]],
      ["number[]", ["./output/FileUpload.ts", 7365]],
      [null, ["./output/Evaporate.ts", 5342]],
      ["FileUpload[]", ["./output/Evaporate.ts", 5395]]
    ],
    {}
  ],
  [
    "./output/Utils.ts",
    4741,
    [
      ["number", null],
      ["FileUpload", ["./output/Evaporate.ts", 5360]],
      ["FileUpload", ["./output/Evaporate.ts", 5416]]
    ],
    {}
  ],
  ["./output/FileUpload.ts", 3727, [["string", null]], {}],
  ["./output/PutPart.ts", 4816, [["string", null]], {}],
  [
    "./output/SignedS3AWSRequest.ts",
    4624,
    [["ProgressEvent", null]],
    { "arrow": true, "parens": [4622, 4624] }
  ],
  [
    "./output/FileUpload.ts",
    16311,
    [["string", null]],
    { "arrow": true, "parens": [16305, 16311] }
  ],
  ["./output/FileUpload.ts", 16806, [["() => any", null]], { "arrow": true }],
  ["./output/FileUpload.ts", 16814, [["() => any", null]], { "arrow": true }],
  ["./output/FileUpload.ts", 7081, [["undefined", null]], {}],
  [
    "./output/FileUpload.ts",
    7178,
    [["number", null]],
    { "arrow": true, "parens": [7177, 7178] }
  ],
  [
    "./output/Evaporate.ts",
    7885,
    [["string", null]],
    { "arrow": true, "parens": [7879, 7885] }
  ],
  [
    "./output/Evaporate.ts",
    5320,
    [["FileUpload", ["./output/Evaporate.ts", 7918]]],
    {}
  ]
]
